[General]
# path to raw input image (nd/stk or czi) files. paths should be given absolutely to
# improve safety. make sure to use the server based path style (/tungstenfs/...).
input_path = ./
# path where analysis results are saved (created if not given).
output_path = ./
# file extension of raw files (nd or czi).
file_ext = nd
# do 3d analysis?
do_3d = False
# do timeseries analysis? ignored if do_3d is set to true.
do_timeseries = False

[PreprocessingAlignment]
# align images?
alignment_enabled = False
# path to bead alignment files.
alignment_path = ./
# strategy for image registration [options: pystackreg, deepblink].
alignment_method = deepblink
# path to deepblink model used for alignment.
alignment_model = ./model.h5
# channel index for reference channel to stay static.
channel_reference = 0
# channel index for alignment channel to be transformed.
channel_transform = 1

[PreprocessingNormalization]
# registration method. ignored if do_3d or do_timeseries is set to true. [options:
# maximum, mean, sharpest]
registration_method = maximum
# frame to start analysis. only if do_3d or do_timeseries is true.
frame_start = 0
# frame to end analysis. only if do_3d or do_timeseries is true.
frame_end = 0
# position to start crop x and y.
crop_start = 0
# position to end crop x and y.
crop_end = 0
# mapping of axes to bin-scale.
bin_axes = []

[SpotsDetection]
# list of channel indices to detect spots.
detect_channels = []
# list of models to use for spot detection. will use the same order as the channels
# provided above. must be passed using quotes (["", ...]). there should be one model
# for every channel listed in `detect_channels`.
detect_models = []
# radius around spots for characterization.
refinement_radius = 3

[SpotsTracking]
# maximum number of frames to skip in tracks. set to 0 if do_3d is set to true!
gap_frames = 3
# minimum track length. if do_3d is set to true, shorter tracks will be removed!
min_length = 5
# pixel search range between spots in tracks/stacks. calculated by euclidean distance.
search_range = 5
# if ensemble drift xy(t) should be subtracted. only available if do_timeseries is set
# to true.
subtract_drift = False

[SpotsColocalization]
# do colocalization analysis?
coloc_enabled = False
# list of channel index-pairs for colocalization. in format of [[reference, transform],
# ...]. must contain values from channels in spotsdetection.
coloc_channels = [()]
# relative z-distance given x/y-distances are set to 1. only if do_3d is set to true.
z_distance = 1
# maximum distance for colocalization.
distance_cutoff = 5
# minimum number of frames for colocalization.
min_frames = 3

[SegmentationCells]
# which option for cellular segmentation should be done. [options: nuclei, cyto, both]
selection = both
# method for nuclear segmentation. [options: cellpose, otsu]
method_nuclei = otsu
# method for cytoplasmic segmentation. will only be used for the cytoplasmic part of
# selection `both`. [options: otsu, li, triangle]
method_cyto = triangle
# channel index (0-indexed).
channel_nuclei = 0
channel_cyto = 0
# paths to custom cellpose models.
cellpose_models = []
# expected cellular diameter. only if method is cellpose.
cellpose_diameter = 150
# if segmap should be resampled (slower, more accurate). only if method is cellpose.
cellpose_resample = True
# sigma for gaussian filter before thresholding. only if method nuclei is otsu.
gaussian = 3
# upper clip limit before thresholding to remove effect of outliers.
upper_clip = 0.95
# minimum object size - to filter out possible debris. only if method is otsu.
min_size_nuclei = 5000
# minimum object size - to filter out possible debris. don't set too large if medium-
# sized blobs should be kept. only if method is otsu.
min_size_cyto = 5000
# minimum radial distance to separate potentially merged nuclei (between centers). only
# if method is otsu.
min_distance = 50
# should segmentation maps touching the border be removed? currently only implemented
# if selection is both!
remove_border = True
# add a column where the distance of each spot to the perifery is measured.
border_distance = False

[SegmentationOther]
# enable other channel segmentation?
sego_enabled = False
# list of channel indices.
sego_channels = []
# list of methods. must be passed using quotes (["", ...]). [options: deep, otsu, li,
# multiotsu].
sego_methods = []
# list of models. must match the order of the methods above. set to none if using a
# mixture. only if method is deep.
sego_models = []
# list of segmentation_model backbones. only if method is deep.
sego_backbones = []

[FlyBrainCells]
# drosophila fly brain segmentation.
brains_enabled = False
# index for nucleus channel.
brains_channel = 0
# cellpose model batch size (default 8 too large).
batch_size = 4
# minimum mean pixel intensity of nuclei to not get filtered.
min_intensity = 0
# minimum area in pixels of nuclei (anything below filtered).
min_area = 200
# maximum area in pixels of nuclei (anything above filtered).
max_area = 8000
# dilation radius for cell segmentation.
dilation = 3

